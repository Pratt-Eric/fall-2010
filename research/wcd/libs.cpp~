#include "libs.h"

string itoa(int integer){
  if (integer==0) return string("0");
  string a;
  int start, digits, piece;

  //count digits
  digits=0;
  piece=((integer<0)? 0-integer : integer);
  while( piece > 0 ) {
    piece-= (piece%10);
    piece/=10;
    digits++;
  }

  start=((integer<0)? 1 : 0);
  a.resize(digits+start,' ');
  if (integer<0) a[0]='-';

  piece=((integer<0)? 0-integer : integer);
  for(int i=0;  piece > 0; i++ ) {
    a[ digits+start-i-1] = (piece%10)+48;
    piece-= (piece%10);
    piece/=10;
  }
  return a;
}

// Usage of the program. 
void usage() {
  cerr << "USAGE:\n./wcd <trans_file> <fanout> <maxentry> <maxlevel>\n";
  cerr << "trans_file: file name of transaction.\n"
       << "fanout    : max child nodes for nonleaf (internal) node.\n"
       << "maxlevel  : maximum level of tree." << endl;
  return; 
}
