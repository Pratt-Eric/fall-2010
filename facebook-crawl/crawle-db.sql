-- This SQL file is used to create the database and table used for the
-- storage of crawle data. 
-- This database contains following tables: 
-- osn_social_graph The social link between friends. 
-- osn_user_profile The profiles(info page) of OSN users. 
-- osn_user_wallposts The wall posts of people. 
-- osn_user_notes The notes of users. 
-- osn_user_photos The photos of OSN users. 
-- 
-- Created by Simon (gsmsteve@gmail.com) on Thu Mar 24 10:58:05 EDT 2011 
-- All Rights Reserved. 

CREATE DATABASE IF NOT EXISTS facebookdb; 

USE facebookdb;

-- The social graph...
-- user_id The id of a OSN user. 
-- from_friend The user is reached from *this* friend. 
-- user_name The name of user. 
-- friend_cnt How many friends does this user have? 
CREATE TABLE IF NOT EXISTS osn_social_graph (
user_id VARCHAR(20) NOT NULL,
from_friend VARCHAR(20) NOT NULL,
user_name VARCHAR(100) DEFAULT '',
friend_cnt INT DEFAULT 0,
PRIMARY KEY (user_id)
)ENGINE=INNODB;

-- The profiles of users. 
-- profile_user_id Whoes profile is this? (Primary Key) 
-- xxxx_public If 'xxxx' is public for viewing. 
-- basic_info Basic information such as DOB, Sex etc. 
-- edu_work Education and Work information. 
-- contact_info Contact information such as email etc. 
-- groups Groups that profile_user has joined. 
-- activities Activities that profile_user likes. 
-- philosophy Philosophy profile_user believes in. 
-- sports Sports that profile_user likes. 
-- arts_entertain Arts and entertainments user likes. 
-- privacy_notice Notice generated by system from user' 
-- privacy settings. 
CREATE TABLE IF NOT EXISTS osn_user_profile (
profile_user_id VARCHAR(20) NOT NULL, 
wallpost_public BOOLEAN NOT NULL,
profile_public BOOLEAN NOT NULL,
photos_public BOOLEAN NOT NULL, 
notes_public BOOLEAN NOT NULL, 
friends_public BOOLEAN NOT NULL, 
basic_info VARCHAR(10000) DEFAULT '',
edu_work VARCHAR(1000) DEFAULT '', 
contact_info VARCHAR(1000) DEFAULT '', 
groups VARCHAR(1000) DEFAULT '', 
activities VARCHAR(10000) DEFAULT '', 
philosophy VARCHAR(10000) DEFAULT '',
sports VARCHAR(1000) DEFAULT '',
arts_entertain VARCHAR(1000) DEFAULT '', 
privacy_notice VARCHAR(1000) DEFAULT '',
PRIMARY KEY (profile_user_id),
FOREIGN KEY (profile_user_id) REFERENCES osn_social_graph(user_id)
	ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=INNODB; 

-- Wallposts storage for wallpost_user_id. 
-- wallpost_event_id Unique id for *this* event. 
-- wallpost_user_id Whose wall is this post from. 
-- event_time When this post happened? 
-- event_type What kind of events? 
-- Possible events are: post, likes, comments, friendships etc. 
-- event_actor Who initiate this event. 
-- event_coactor Who else have participated in this event? 
-- event_abstract What happened? 
-- event_description Details about this event. 
-- event_likes How many likes and who likes the event? 
-- event_comments Who made what comments on this event. 

CREATE TABLE IF NOT EXISTS osn_user_wallposts (
wallpost_event_id VARCHAR(100) NOT NULL, 
wallpost_user_id VARCHAR(20) NOT NULL, 
event_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP, 
event_type VARCHAR(20) DEFAULT 'post', 
event_actor VARCHAR(20) DEFAULT '', 
event_coactors VARCHAR(1000) DEFAULT '', 
event_abstract VARCHAR(1000) DEFAULT '',
event_description VARCHAR(10000) DEFAULT '',
event_likes VARCHAR(1000) DEFAULT '',
event_comments VARCHAR(10000) DEFAULT '',
PRIMARY KEY (wallpost_event_id), 
FOREIGN KEY (wallpost_event_id) REFERENCES osn_social_graph(user_id)
	ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=INNODB; 

-- OSN user notes. 
-- note_id Unique id of a note. 
-- note_user_id Author of this note. 
-- note_time When was this note writen? 
-- note_title Title of *this* note. 
-- note_content Content of the note. 
-- note_likes Who likes this note? 
-- note_comments Comments on this note. 
CREATE TABLE IF NOT EXISTS osn_user_notes (
note_id VARCHAR(20) NOT NULL, 
note_user_id VARCHAR(20) NOT NULL, 
note_time TIMESTAMP, 
note_title VARCHAR(100) NOT NULL, 
note_content VARCHAR(10000) DEFAULT '', 
note_likes VARCHAR(1000) DEFAULT '',
note_comments VARCHAR(1000) DEFAULT '',
PRIMARY KEY (note_id), 
FOREIGN KEY (note_id) REFERENCES osn_social_graph(user_id)
	ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=INNODB; 

-- Photos index of OSN users.  
-- photo_id Unique id of *this* photo.
-- photo_user_id Whose album is this photo from? 
-- photo_likes Who likes this photo? 
-- photo_comments Comments on this photo. 
-- photo_description Description of this photo.
-- photo_tags Who were tagged on this photo? 
-- photo_dir storage directory of the photo. 
-- photo_file_name The file name of the photo in dir. 
CREATE TABLE IF NOT EXISTS osn_user_photos (
photo_id VARCHAR(20) NOT NULL, 
photo_user_id VARCHAR(20) NOT NULL, 
photo_likes VARCHAR(1000) DEFAULT '', 
photo_comments VARCHAR(10000) DEFAULT '',
photo_description VARCHAR(1000) DEFAULT '',
photo_tags VARCHAR(2000) DEFAULT '',
photo_dir VARCHAR(100) DEFAULT '/',
photo_file_name VARCHAR(100) NOT NULl, 
PRIMARY KEY (photo_id),
FOREIGN KEY (photo_id) REFERENCES osn_social_graph(user_id)
	ON DELETE CASCADE ON UPDATE CASCADE
)ENGINE=INNODB; 